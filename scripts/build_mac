#!/bin/sh

source .venv/bin/activate
pip install --upgrade pip
pip install --upgrade sphinx
pip install --upgrade aqtinstall

# Install qt with aqtinall
QM_FILE="./qt/6.8.0/macos/bin/qmake"
if [ ! -e "$QM_FILE" ]; then
	aqt install-qt mac desktop 6.8.0 clang_64 --outputdir qt
fi
# export Qt6_Dir="./qt/6.8.0/macos"

# Qt6_Dir=$(brew --prefix qt)
export PATH="/usr/local/opt/qt@6/bin:$PATH"
export LDFLAGS="-L/usr/local/opt/qt@6/lib"
export CPPFLAGS="-I/usr/local/opt/qt@6/include"

BUILD_TYPE=Release
MAC_OS_TARGET=13

rm -rf build/"$BUILD_TYPE"
rm -rf install/

cmake --debug-find-pkg=cups -S . -B build/"$BUILD_TYPE" \
	-DQT_DEBUG_FIND_PACKAGE=ON \
	-DCMAKE_BUILD_TYPE="$BUILD_TYPE" \
	-DCMAKE_OSX_DEPLOYMENT_TARGET="$MAC_OS_TARGET" \
	-DCMAKE_INSTALL_PREFIX:PATH=./app

# Execute the build.  You can specify a specific target with "--target <NAME>"

cmake --build build/"$BUILD_TYPE" \
	--config "$BUILD_TYPE" \
	--target install \
	--parallel "$(sysctl -n hw.logicalcpu)"

cd build || exit
ctest -VV
cpack -G 7Z
cpack -G STGZ
cpack -G TBZ2
cpack -G TGZ
cpack -G TXZ
# cpack -G TZ
cpack -G TZST
cpack -G ZIP
cpack -G IFW
cpack -G DragNDrop
cp jmbdeqt-0.7.0.-macos_x86_64.dmg jmbdeqt-0.7.0-dnd-macos_x86_64.dmg
cpack -G IFW
