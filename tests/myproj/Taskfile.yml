version: 3

vars:
  PROJECT_DIR: '{{.PROJECT_DIR | default "."}}'

tasks:
  build:
    - cmake {{.PROJECT_DIR}} -B {{.PROJECT_DIR}}/build -DCMAKE_BUILD_TYPE:STRING=Debug -G '{{.CMAKE_GENERATOR | default "Ninja Multi-Config"}}' {{.CMAKE_ARGS}}
    - cmake --build {{.PROJECT_DIR}}/build --config Debug

  build.release:
    - cmake {{.PROJECT_DIR}} -B {{.PROJECT_DIR}}/build -DCMAKE_BUILD_TYPE:STRING=Release -G '{{.CMAKE_GENERATOR | default "Ninja Multi-Config"}}' {{.CMAKE_ARGS}}
    - cmake --build {{.PROJECT_DIR}}/build --config Release

  test:
    - task: build
    - cd {{.PROJECT_DIR}}/build && ctest -C Debug --verbose

  test.release:
    - task: build.release
    - cd {{.PROJECT_DIR}}/build && ctest -C Release --verbose

  build.mingw:
    cmds:
      - task: build
        vars:
          CMAKE_ARGS: -DENABLE_CROSS_COMPILING:BOOL=ON -DCMAKE_C_COMPILER={{.CROSS_CC | default "x86_64-w64-mingw32-gcc"}} -DCMAKE_CXX_COMPILER={{.CROSS_CXX | default "x86_64-w64-mingw32-g++"}}

  build.mingw.release:
    cmds:
      - task: build.release
        vars:
          CMAKE_ARGS: -DENABLE_CROSS_COMPILING:BOOL=ON -DCMAKE_C_COMPILER={{.CROSS_CC | default "x86_64-w64-mingw32-gcc"}} -DCMAKE_CXX_COMPILER={{.CROSS_CXX | default "x86_64-w64-mingw32-g++"}}

  lint:
    - ~/vcpkg/vcpkg format-manifest ./vcpkg.json

  clean:
    - cmd: powershell -c 'function rmrf($path) { if (test-path $path) { rm -r -force $path }}; rmrf ./build'
      platforms: [windows]
    - cmd: rm -rf ./build
      platforms: [linux, darwin]
