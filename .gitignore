## Ignore temporary files
## build results
## generated databases

svenv/

linuxdeployqt
*.AppImage
.build
appbuild
appdir
/build*/
*.tar
*.gz
*~swp
# .qtmodules-travis

# Sqlite-DB
*.db
*.db3
*.sqlite
*.user.*

# General Build artifacts
[Dd]ebug/
[Rr]elease/
[Bb]uild/
[Oo]bj/
[Bb]in/
[Ii]nstall/
[Ll]ib/*.so*
Makefile*
qbs-build/
temp*/
[Bb]uild-*
project.json

# Compiled Object files, Static and Dynamic libs (Shared Objects)
*.o
*.qm
*.moc
moc_*.cpp
ui_*.h
qrc_*
default/
moc_predefs.h
jmbde_autogen/

# Build artifacts on Windows
*.exe
*.dll
*.obj
*.a
*.lib
*.exp
*.intermediate.manifest

# Build artifacts on Mac
.qmake.stash
translations/phony_target.app

# IDE files
*.pro.user*
*.qbs.user*
*.txt.user

# Man

# Doxygen and Sphinx
html/
docs/_build/html/
docs/_build/gettext/.doctrees
docs/build/doctrees/
*.mo

# Linux perf/debugging
gmon.out

# VS-Code
*.db-*

# This file is used to ignore files which are generated
# ----------------------------------------------------------------------------

!core/
*.*#
*.a
*.app
*.autosave
*.bak
*.bin
*.core
*.debug
*.embed.manifest
*.moc
*.o
*.obj
*.orig
*.out
*.prl
*.qm
*.rej
*.res
*.so
*.so.*
*_pch.h.cpp
*_resource.rc
*_wrapper.bat
*_wrapper.sh
*~
.#*
.DS_Store
/.qmake.cache
/.qmake.stash
*.check_cache
CMakeFiles/
CMakeCache.txt
compile_commands.json
Makefile*
Thumbs.db
core
moc_*.cpp
qrc_*.cpp
tags
ui_*.h
wrapper.bat
wrapper.sh

# qtcreator generated file
*.pro.user*
*.pyqtc.user*
*.qbs.user*
*.qmlproject.user*
/src/plugins/**/*.json
/src/plugins/coreplugin/ide_version.h
app_version.h
phony.c

# xemacs temporary files
*.flc

# Vim temporary files
.*.swp

# Visual Studio generated files
*.ib_pdb_index
*.idb
*.ilk
*.ncb
*.opensdf
*.pdb
*.sdf
*.sln
*.suo
*.vcproj
*.vcxproj
*vcproj.*.*.user
*vcxproj.*

# gcov files
*.gcda
*.gcno
*.gcov

# MinGW generated files
*.Debug
*.Release

# Python byte code
*.pyc

# mypy
.mypy_cache/

# Qml caching files
*.jsc
*.qmlc

# Directories to ignore
# ---------------------

.moc/
.obj/
.pch/
.rcc/
.uic/
/*-debug/
/*-release/
/dist/gdb/*.gz
/dist/gdb/python/
/dist/gdb/qtcreator-*/
/dist/gdb/source/
/dist/gdb/staging/
/doc/api/html/
/doc/html-dev/
/doc/html/
/doc/pluginhowto/html/
/jmbde_doc_generated
/lib/
/lib64/
/libexec/
debug/
ipch/
release/
tmp/

# Binaries
# --------
*.dll
*.exe
/bin/qbs*

# Tests
#------

# qbs builds
/*-debug/
/*-release/

# general
*.kdev4
*~
*.rej
*.orig
*.out
CMakeSettings.json
CMakeLists.txt.user*
*.qmlc
callgrind.out.*
perf.data*

# from kdiff3
*.BACKUP.*
*.BASE.*
*.LOCAL.*
*.REMOTE.*

# ts generation
translations/plugin_meta_data.cpp
.vscode/.conan_tools/info.log
ecm_uninstall.cmake
prefix.sh

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# static files generated from Django application using `collectstatic`
media
static

# conan
conan.lock
conaninfo.*
conanbuildinfo.*
conan/test_package/build