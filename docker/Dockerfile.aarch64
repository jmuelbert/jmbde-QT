FROM ubuntu:22.04 AS base

# add setup-cpp https://github.com/aminya/setup-cpp
RUN apt-get update && apt-get install -y \
    npm \
    && rm -rf /var/lib/apt/lists/*
RUN npm install -g setup-cpp



FROM base AS setup

# install cmake, ninja, and ccache
RUN setup-cpp --clangtidy true --clangformat true --cmake true --ninja true --ccache true --cppcheck true --vcpkg true --conan true --task true 

RUN apt-get update && apt-get install -y \
    g++-aarch64-linux-gnu gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu \
    && rm -rf /var/lib/apt/lists/*

COPY ./docker/entrypoint.sh /docker-entrypoint.sh
ENTRYPOINT [ "/docker-entrypoint.sh" ]


FROM setup AS build
COPY . /home/project_options
WORKDIR /home/project_options
RUN git submodule update --init
CMD ["/bin/bash", "-c", "task rpi4:build.cross"]

FROM setup AS build-debug
COPY . /home/project_options
WORKDIR /home/project_options
RUN git submodule update --init
CMD ["/bin/bash", "-c", "task rpi4:build.cross.debug"]

FROM setup AS build-vcpkg
COPY . /home/project_options
WORKDIR /home/project_options
RUN git submodule update --init
CMD ["/bin/bash", "-c", "task rpi4-vcpkg:build.cross"]

FROM setup AS build-custom
COPY . /home/project_options
WORKDIR /home/project_options
RUN git submodule update --init
CMD ["/bin/bash", "-c", "task rpi4:build.cross.custom-toolchain"]

FROM setup AS build-vcpkg-custom
COPY . /home/project_options
WORKDIR /home/project_options
RUN git submodule update --init
CMD ["/bin/bash", "-c", "task rpi4-vcpkg:build.cross.custom-toolchain"]

FROM setup AS build-aarch64
COPY . /home/project_options
WORKDIR /home/project_options
RUN git submodule update --init
CMD ["/bin/bash", "-c", "task rpi4:build.cross.aarch64"]

FROM setup AS test
RUN apt-get update && apt-get install -y \
    qemu-user \
    && rm -rf /var/lib/apt/lists/*
COPY . /home/project_options
WORKDIR /home/project_options
RUN git submodule update --init
ENV QEMU_LD_PREFIX /usr/aarch64-linux-gnu
CMD ["/bin/bash", "-c", "task rpi4:build.cross && qemu-aarch64 /home/project_options/tests/rpi4/build/Release/example"]


FROM setup AS test-aarch64
RUN apt-get update && apt-get install -y \
    qemu-user \
    && rm -rf /var/lib/apt/lists/*
COPY . /home/project_options
WORKDIR /home/project_options
RUN git submodule update --init
ENV QEMU_LD_PREFIX /usr/aarch64-linux-gnu
CMD ["/bin/bash", "-c", "task rpi4:build.aarch64 && qemu-aarch64 /home/project_options/tests/rpi4/build/Release/example"]