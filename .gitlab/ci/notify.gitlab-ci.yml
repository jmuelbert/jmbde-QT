.notify-slack:
    image: ${GITLAB_DEPENDENCY_PROXY}alpine
    stage: notify
    dependencies: []
    cache: {}
    variables:
        MERGE_REQUEST_URL: ${CI_MERGE_REQUEST_PROJECT_URL}/-/merge_requests/${CI_MERGE_REQUEST_IID}
    before_script:
        - apk update && apk add git curl bash

notify-update-gitaly:
    extends:
        - .notify-slack
    rules:
        - if: "$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == $GITALY_UPDATE_BRANCH"
          when: on_failure
          allow_failure: true
    variables:
        NOTIFY_CHANNEL: g_create_gitaly
        GITALY_UPDATE_BRANCH: release-tools/update-gitaly
    script:
        - echo "NOTIFY_CHANNEL is ${NOTIFY_CHANNEL}"
        - echo "CI_PIPELINE_URL is ${CI_PIPELINE_URL}"
        - scripts/slack ${NOTIFY_CHANNEL} "☠️ \`${GITALY_UPDATE_BRANCH}\` failed! ☠️ See ${CI_PIPELINE_URL} (triggered from ${MERGE_REQUEST_URL})" ci_failing "GitLab QA Bot"

notify-security-pipeline:
    extends:
        - .notify-slack
        - .delivery:rules:security-pipeline-merge-result-failure
    variables:
        NOTIFY_CHANNEL: f_upcoming_release
    script:
        - echo "NOTIFY_CHANNEL is ${NOTIFY_CHANNEL}"
        - echo "CI_PIPELINE_URL is ${CI_PIPELINE_URL}"
        # <!subteam^S0127FU8PDE> mentions the `@release-managers` group
        - scripts/slack ${NOTIFY_CHANNEL} "<!subteam^S0127FU8PDE> ☠️  Pipeline for merged result failed! ☠️ See ${CI_PIPELINE_URL} (triggered from ${MERGE_REQUEST_URL})" ci_failing "GitLab Release Tools Bot"
