name: Linux Build Ubuntu Package

on:
    push:
        branches:
            - master
            - develop
        paths-ignore:
            - "README.md"
            - "LICENSE"

    pull_request:
        paths-ignore:
            - "README.md"
            - "LICENSE"
    release:
        types: [published]

env:
    QT_VERSION: 5.15.0
    CMAKE_VERSION: 3.18.0
    NINJA_VERSION: 1.10.0
    CCACHE_VERSION: 3.7.11
    GOOGLE_TEST_VERSION: 1.10.0
    BUILD_TYPE: Release

jobs:
    check_commit_msg:
        outputs:
            commit_message: ${{ steps.get_message.outputs.message }}
        name: Check if the workflow has been disabled.
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Get commit message
              id: get_message
              run: |
                  echo "::set-output name=message::$(git log --format=%B -n 1 ${{ github.event.after }})"
                  echo "::set-env name=message::$(git log --format=%B -n 1 ${{ github.event.after }})"
    linux:
        strategy:
            fail-fast: false
            matrix:
                distro: [18.04, 20.04]
                #arch: [x86, x64]
        needs: check_commit_msg
        if: ${{ !contains( needs.check_commit_msg.outputs.commit_message, 'NO_DEB') }}
        name: Ubuntu ${{ matrix.distro }}
        runs-on: ubuntu-latest
        container: ubuntu:${{ matrix.distro }}

        steps:
            - name: Install git
              run: |
                  apt-get update
                  apt-get install -y software-properties-common
                  add-apt-repository ppa:git-core/ppa
                  apt-get update
                  apt-get install -y git

            - name: Get the version
              id: get_version
              shell: bash
              run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

            - name: Checking out sources
              uses: actions/checkout@v2
              with:
                  submodules: "recursive"

            - name: Install build dependencies
              run: |
                  DEBIAN_FRONTEND=noninteractive apt-get install -y keyboard-configuration
                  apt-get install -y build-essential ninja-build qtbase5-dev qttools5-dev qttools5-dev-tools libqt5help5 cmake pkgconf bash
                  apt-get install -y python3
                  apt-get install -y python3-pip

            - name: conan_and_ecm
              id: conan_and_ecm
              shell: bash
              env:
                  CC: /usr/bin/gcc-7
                  CXX: /usr/bin/g++-7
              run: |
                  pip3 install conan
                  conan user
                  conan create ./conan/ecm

            - name: Linux - ${{ matrix.qt_version }} - Generate Dependencies and Build
              run: |
                  mkdir build
                  cd build
                  conan install ..
                  cmake .. -GNinja -DCMAKE_INSTALL_PREFIX=./AppDir/usr -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
                  cmake --build . --parallel $(nproc)
                  cmake --install .

            - name: Get package name
              shell: bash
              id: get_package
              run: |
                  echo ::set-output name=NAME::$(basename build/jmbde-*.deb)

            - name: Upload artifact
              uses: actions/upload-artifact@v2-preview
              with:
                  name: jmbde-${{ steps.get_version.outputs.VERSION }}-ubuntu-${{ matrix.distro }}.deb
                  path: build/${{ steps.get_package.outputs.NAME }}

            - name: Upload binaries to release
              uses: svenstaro/upload-release-action@v1-release
              if: github.event_name == 'release'
              with:
                  repo_token: ${{ secrets.GITHUB_TOKEN }}
                  file: build/${{ steps.get_package.outputs.NAME }}
                  asset_name: jmbde-${{ steps.get_version.outputs.VERSION }}-ubuntu-${{ matrix.distro }}.deb
                  tag: ${{ github.ref }}
                  overwrite: true
