---
name: Style

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  SOURCE_CACHE: ${{ github.workspace }}/src
  QT_VERSION: 6.0.1
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug
  PRODUCT: jmbde
  targetName: jmbde

jobs:
  build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: "**/src"
          key: ${{ github.workflow }}-src-${{ hashFiles('**/CMakeLists.txt', '**/*.cmake') }}

      - name: Install format dependencies
        run: |
          brew install clang-format
          pip3 install cmake_format==0.6.11 pyyaml

      - name: Install Python 3.x version
        uses: actions/setup-python@v2
        with:
            python-version: "3.x"
            architecture: ${{ matrix.arch }}

      - name: Install conan
        id: conan
        run: |
            pip3 install --upgrade pip
            pip3 install conan
            conan user

      - name: Restore Qt from cache
        id: cache-qt
        uses: actions/cache@v2.1.4
        with:
            path: ../Qt
            key: Qt-${{ matrix.config.os }}-${{ env.QT_VERSION }}

      - name: Installing Qt${{ env.QT_VERSION }} - ${{ matrix.config.qt_arch }} on ${{ matrix.config.os }}
        uses: jurplel/install-qt-action@v2
        with:
            version: ${{ env.QT_VERSION }}
            target:  ${{ matrix.config.qt_target }}
            arch:  ${{ matrix.config.qt_arch }}
            mirror: "http://mirrors.ocf.berkeley.edu/qt/"
            cached: ${{ steps.cache-qt.outputs.cache-hit }}

      - name: Create Build Environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{runner.workspace}}/build
        # Note the current convention is to use the -S and -B options here to specify source
        # and build directories, but this is only available with CMake 3.13 and higher.
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: |
            cmake $GITHUB_WORKSPACE \
                ${{matrix.config.generator}} \
                -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake --build . --config ${{ env.BUILD_TYPE }} -j2 --target check-format

      - name: Validate QML and JavaScript files
        uses: liri-infra/qmllint-action@master
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

