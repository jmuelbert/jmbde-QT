---
name: "CD: MacOS Qt6"
on:
    pull_request:
        paths-ignore:
            - "README.md"
            - "LICENSE"
            - "BUILD.md"
    release:
        types: [published]

env:
    QT_VERSION: 6.0.0

jobs:
    build:
        name: Build
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [macos-latest]
                build_type: [Release, RelWithDebInfo]
                qt_arch: [clang_64]
        env:
            targetName: jmbde
        steps:
            - name: Get the version
              id: get_version
              shell: bash
              run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
            - name: cacheQt
              id: cache-qt
              uses: actions/cache@v2.1.3
              with:
                  path: ../Qt/${{env.QT_VERSION}}/${{matrix.qt_arch}}
                  key: ${{ runner.os }}-Qt/${{env.QT_VERSION}}/${{matrix.qt_arch}}

            - name: Install Qt
              uses: jurplel/install-qt-action@v2
              with:
                  cached: ${{ steps.cache-qt.outputs.cache-hit }}
                  version: ${{ env.QT_VERSION }}

            - uses: actions/checkout@v2
              with:
                  submodules: true
            - name: macOS - ${{ env.QT_VERSION }} - Build preparation - Install
                  Packages
              run: |
                  brew install ninja pkg-config

            - name: Install conan
              id: conan
              run: |
                  pip3 install --upgrade pip
                  pip3 install conan
                  conan user

            - name: Create Build Environment
              # Some projects don't allow in-source building, so create a separate build directory
              # We'll use this as our working directory for all subsequent commands
              run: cmake -E make_directory ${{runner.workspace}}/build

            - name: Configure CMake
              # Use a bash shell so we can use the same syntax for environment variable
              # access regardless of the host operating system
              shell: bash
              working-directory: ${{runner.workspace}}/build
              # Note the current convention is to use the -S and -B options here to specify source
              # and build directories, but this is only available with CMake 3.13 and higher.
              # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
              env:
                  Qt6_DIR: ../Qt/${{env.QT_VERSION}}/${{matrix.qt_arch}}
              run: |
                  cd build
                  cmake .. \
                    -GNinja \
                    -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
                    -DJMBDE_QT6=ON \
                    -DJMBDE_BUILD_INFO="Build for macOS" \
                    -DJMBDE_BUILD_EXTRA_INFO="Build on $(uname -sr)" \
                    -DCMAKE_OSX_DEPLOYMENT_TARGET=10.15 \
                    -DBUILD_TRANSLATIONS=ON \
                    -DCMAKE_INSTALL_PREFIX:PATH=./app

            - name: Build
              working-directory: ${{runner.workspace}}/build
              shell: bash
              # Execute the build.  You can specify a specific target with "--target <NAME>"
              env:
                  Qt6_DIR: ../Qt/${{env.QT_VERSION}}/${{matrix.qt_arch}}
              run: |
                  cmake --build . --parallel $(sysctl -n hw.logicalcpu)
                  cmake --install .

            - name: Package
              env:
                  Qt6_DIR: ../Qt/${{env.QT_VERSION}}/${{matrix.qt_arch}}
              working-directory: ${{runner.workspace}}/build
              run: |
                  export PATH=$Qt6_DIR/bin:$PATH
                  macdeployqt ./app/${targetName}.app -qmldir=. -appstore-compliant -libpath=./app/jmbde.app/Contents/Frameworks -verbose=1 -dmg
                  cp ./app/${targetName}.dmg ${targetName}-Qt${{env.QT_VERSION}}.dmg

            - name: macOS - ${{ env.QT_VERSION }} - Uploading artifact
              uses: actions/upload-artifact@v2.2.2
              with:
                  name: ${{
                      env.targetName}}-Qt${{env.QT_VERSION}}-${{matrix.build_type}}.dmg
                  path: build/${{ env.targetName }}-Qt${{env.QT_VERSION}}.dmg

            - name: macOS - ${{ env.QT_VERSIONs }}- Upload binaries to release
              uses: svenstaro/upload-release-action@v2
              with:
                  repo_token: ${{ secrets.GITHUB_TOKEN }}
                  file: build/${{ env.targetName }}-Qt${{env.QT_VERSION}}.dmg
                  asset_name: ${{ env.targetName }}-${{
                      steps.get_version.outputs.VERSION}}-Qt${{env.QT_VERSION}}-${{
                      matrix.build_type}}.dmg
                  tag: ${{ github.ref }}
                  overwrite: true
