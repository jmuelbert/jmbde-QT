---
name: "CD: MacOS Qt6"
on:
    pull_request:
        paths-ignore:
            - "README.md"
            - "LICENSE"
            - "BUILD.md"
    release:
        types: [published]
jobs:
    build:
        name: Build
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [macos-latest]
                build_type: [Release, RelWithDebInfo]
                qt_version: [6.0.0]
                qt_arch: [clang_64]
        env:
            targetName: jmbde
        steps:
            - name: Get the version
              id: get_version
              shell: bash
              run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
            - name: cacheQt
              id: cache-qt
              uses: actions/cache@v2.1.3
              with:
                  path: ../Qt/${{matrix.qt_version}}/${{matrix.qt_arch}}
                  key: ${{ runner.os }}-Qt/${{matrix.qt_version}}/${{matrix.qt_arch}}
            #      - name: setupQt
            #        if: steps.MacosCacheQt.outputs.cache-hit == 'true'
            #        shell: bash
            #        env:
            #          QtPath: ../Qt/${{matrix.qt_version}}/${{matrix.qt_arch}}
            #        run: |
            #          qt_Path=${env:QtPath}
            #          echo "Qt5_DIR=\"$QtPath\"" >> $GITHUB_ENV
            #          echo "${qt_Path}/bin" >> $GITHUB_PATH
            - name: Install Qt
              uses: jurplel/install-qt-action@v2
              with:
                  cached: ${{ steps.cache-qt.outputs.cache-hit }}
                  version: ${{ matrix.qt_version }}

            - uses: actions/checkout@v2
              with:
                  submodules: true
            - name:
                  macOS - ${{ matrix.qt_versionsion }} - Build preparation - Install
                  Packages
              run: |
                  brew install ninja pkg-config

            - name: conan_and_ecm
              id: conan_and_ecm
              run: |
                  python3 -m pip install conan
                  conan user
                  conan create ./conan/ecm
                  mkdir build
                  cd build
                  conan install ..
                  cd ..

            - name: build macos
              env:
                  Qt6_DIR: ../Qt/${{matrix.qt_version}}/${{matrix.qt_arch}}
              run: |
                  cd build
                  cmake .. \
                    -GNinja \
                    -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
                    -DJMBDE_QT6=ON \
                    -DJMBDE_BUILD_INFO="Build for macOS" \
                    -DJMBDE_BUILD_EXTRA_INFO="Build on $(uname -sr)" \
                    -DCMAKE_OSX_DEPLOYMENT_TARGET=10.15 \
                    -DBUILD_TRANSLATIONS=ON \
                    -DCMAKE_INSTALL_PREFIX:PATH=./app
                  cmake --build . --parallel $(sysctl -n hw.logicalcpu)
                  cmake --install .
            - name: package
              env:
                  Qt6_DIR: ../Qt/${{matrix.qt_version}}/${{matrix.qt_arch}}
              run: |
                  #mv ${targetName} ${targetName}.app
                  cd build
                  export PATH=$Qt6_DIR/bin:$PATH
                  macdeployqt ./app/${targetName}.app -qmldir=. -appstore-compliant -libpath=./app/jmbde.app/Contents/Frameworks -verbose=1 -dmg
                  cp ./app/${targetName}.dmg ${targetName}-Qt${{matrix.qt_version}}.dmg

            - name: macOS - ${{ matrix.qt_version }} - Uploading artifact
              uses: actions/upload-artifact@v2.2.2
              with:
                  name:
                      ${{
                      env.targetName}}-Qt${{matrix.qt_version}}-${{matrix.build_type}}.dmg
                  path: build/${{ env.targetName }}-Qt${{matrix.qt_version}}.dmg

            - name: macOS - ${{ matrix.qt_versions }}- Upload binaries to release
              uses: svenstaro/upload-release-action@v2
              with:
                  repo_token: ${{ secrets.GITHUB_TOKEN }}
                  file: build/${{ env.targetName }}-Qt${{matrix.qt_version}}.dmg
                  asset_name:
                      ${{ env.targetName }}-${{
                      steps.get_version.outputs.VERSION}}-Qt${{matrix.qt_version}}-${{
                      matrix.build_type}}.dmg
                  tag: ${{ github.ref }}
                  overwrite: true
