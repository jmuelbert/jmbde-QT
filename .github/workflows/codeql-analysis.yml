---
# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"

on:
  push:
    branches: [main, develop]
    paths:
      - "**.cpp"
      - "**.h"
      - "**.hpp"
      - "**.py"
      - cmake/**
      - src/**
      - CMakeLists.txt
      - conanfile.py
      - ".github/workflows/codeql-analysis.yml"

  pull_request:
    # The branches below must be a subset of the branches above
    types: [opened, synchronize, reopened]
    paths:
      - "**.cpp"
      - "**.h"
      - "**.hpp"
      - "**.py"
      - cmake/**
      - src/**
      - CMakeLists.txt
      - conanfile.py
      - ".github/workflows/codeql-analysis.yml"

  schedule:
    - cron: "38 0 * * 5"

env:
  # Conan cache environment variables
  CONAN_SYSREQUIRES_MODE: enabled
  CONAN_USER_HOME: "${{ github.workspace }}/conan-cache"
  CONAN_USER_HOME_SHORT: "${{ github.workspace }}/conan-cache/short"
  CLANG_TIDY_VERSION: "13.0.0"

jobs:
  analyze:
    name: "Analyze"
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false

      matrix:
        language: ["cpp", "python"]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://git.io/codeql-language-support
        generator:
          - "Ninja Multi-Config"
        build_type:
          - Debug
        qt_version:
          - "6.3.0"
        qt_target:
          - "desktop"

    steps:
      - name: "Cancel Previous Runs"
        uses: styfle/cancel-workflow-action@0.5.0
        with:
          access_token: ${{ github.token }}

      - name: "üß∞ Checkout"
        uses: actions/checkout@v3
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0

      # Initializes the CodeQL tools for scanning.
      - name: "Initialize CodeQL"
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.
          # queries: ./path/to/local/query, your-org/your-repo/queries@main

      - name: "Install Python"
        id: python
        uses: actions/setup-python@v3

      - name: "Install Python dependencies"
        shell: bash
        id: python-deps
        run: |
          python -m pip install --upgrade pip
          if [ -f ./.github/workflows/requirements.txt ]; then
            pip install -r ./.github/workflows/requirements.txt;
          fi

      - name: "üîß Setup Cache"
        uses: ./.github/actions/setup_cache
        with:
          build_type: ${{ matrix.build_type }}
          generator: ${{ matrix.generator }}

      - name: "üêß ‚öôÔ∏è Install Linux dependencies"
        if: runner.os == 'Linux'
        run: |
          sudo apt install -y libclang-dev ninja-build gcovr ccache

      - name: "‚öôÔ∏è Install Qt Version ${{ matrix.qt_version }}"
        if: matrix.language == 'cpp'
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{ matrix.qt_version }}
          # host: ${{ runner.os }}
          target: ${{ matrix.qt_target }}
          # arch: ${{ matrix.qt_arch }}
          install-deps: "true"
          # modules: 'qtcharts qtwebengine'
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
          setup-python: "true"
          # tools: "tools_ifw"
          set-env: "true"

      - name: "Cache Qt"
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: "${{ github.workspace }}/Qt"
          key: ${{ runner.os }}-QtCache

      - name: "Cleanup Conan system packages (they are not properly cached)"
        if: matrix.language == 'cpp'
        run: |
          conan remove -f '*/system'

        # make sure coverage is only enabled for Debug builds, since it sets -O0 to make sure coverage
        # has meaningful results
      - name: "‚öôÔ∏è üêß Configure CMake"
        if: matrix.language == 'cpp'
        shell: bash
        run: |
          mkdir -p ./build
          cd ./build
          conan install ../conanfile.py -b missing -pr:b default -s build_type="${{ matrix.build_type }}"  -g CMakeToolchain
          cd ..
          cmake -S . -B ./build -G "${{matrix.generator}}" \
            -DCMAKE_BUILD_TYPE:STRING=${{matrix.build_type}} \
            -DENABLE_DEVELOPER_MODE:BOOL=${{matrix.developer_mode}} \
            -DOPT_ENABLE_COVERAGE:BOOL='OFF' \
            -DCMAKE_TOOLCHAIN_FILE:PATH="./build/generators/conan_toolchain.cmake" \
            -DGIT_SHA:STRING=${{ github.sha }}

      - name: "üì¶ Build"
        if: matrix.language == 'cpp'
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: |
          cmake --build ./build --config ${{matrix.build_type}}

      # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
      # If this step fails, then you should remove it and run the build manually (see below)
      - name: "üì¶ Autobuild"
        if: matrix.language != 'cpp'
        uses: github/codeql-action/autobuild@v2

      - name: "Perform CodeQL Analysis"
        uses: github/codeql-action/analyze@v2
