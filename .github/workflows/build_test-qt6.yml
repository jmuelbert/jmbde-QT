---
name: "CI: Build Test Qt6"

on: [push, pull_request]

env:
    QT_VERSION: 6.0.0
    BUILD_TYPE: Debug

jobs:
    check_commit_msg:
        outputs:
            commit_message: ${{ steps.get_message.outputs.message }}
        name: Check if the workflow has been disabled.
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Get commit message
              id: get_message
              run: |
                echo "::set-output name=message::$(git log --format=%B -n 1 ${{ github.event.after }})"
    build:
        needs: check_commit_msg
        if: ${{ !contains( needs.check_commit_msg.outputs.commit_message, 'NO_MAIN') }}
        name: ${{ matrix.config.os }}
        runs-on: ${{ matrix.config.os }}
        strategy:
            fail-fast: false
            matrix:
                config:
                    - { os: ubuntu-latest, portable-option: Off }
                    - {
                          os: windows-latest,
                          portable-option: Off,
                          portable-name: -setup.exe,
                      }
                    - {
                          os: windows-latest,
                          portable-option: On,
                          portable-name: -portable.zip,
                      }
                    - { os: macos-latest, portable-option: Off }

        steps:
            - uses: actions/checkout@v2
              with:
                  submodules: recursive

            - name: Install Python 3.8
              uses: actions/setup-python@v2.1.4
              with:
                  python-version: 3.8

            - name: Restore Qt from cache
              id: cache-qt
              uses: actions/cache@v2.1.3
              with:
                  path: ../Qt
                  key: Qt-${{ matrix.config.os }}-${{ env.QT_VERSION }}

            - name: Set up Qt environment
              uses: jurplel/install-qt-action@v2
              with:
                  cached: ${{ steps.cache-qt.outputs.cache-hit }}
                  version: ${{ env.QT_VERSION }}

            - name: conan_and_ecm
              id: conan_and_ecm
              run: |
                  python -m pip install conan
                  conan user
                  conan create ./conan/ecm
                  mkdir build
                  cd build
                  conan install ..
                  cd ..

            - name: Build
              run: |
                  cd  build
                  cmake .. -DCMAKE_BUILD_TYPE=Debug  -DPORTABLE_VERSION=${{ matrix.config.portable-option }} -DCMAKE_INSTALL_PREFIX:PATH=./app
                  cmake --build . --config Release -j2 --target install

            - name: Test
              run: |
                ctest -VV .
