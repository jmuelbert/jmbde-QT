---
version: '{branch}-{build}'
skip_tags: true
max_jobs: 1

image:
  - Visual Studio 2017
  - Ubuntu1804


configuration:
  - Debug
  - Release

platform:
# Disable x86 builds since we only get one concurrent build on AppVeyor and x86
# failures will be caught by Jenkins.
  - x64

pull_requests:  
  do_not_increment_build_number: true
branches:  
  only:
  - master
nuget:  
  disable_publish_on_pr: true


environment:
  my_secret:
    secure: NuyAKQY3nsfYHO6P59pRQCWMFPBYGuShNyCwrBWLuqK7jQ/CmRNZeuWuVRUvy/xU
  MINGW_DIR: C:\mingw-w64\x86_64-7.2.0-posix-seh-rt_v5-rev1\mingw64\bin
  MSYS2_DIR: C:\msys64\bin
  APPVEYOR_YML_DISABLE_PS_LINUX: true

matrix:
  exclude:
    # Ubuntu doesn't support "release-fastbuild".
    - image: Ubuntu1804
      configuration: Debug
    # We only want "release-fastbuild" for Windows since "release" consumes too
    # much memory due to link-time code generation / whole-program optimization.
    - image: Visual Studio 2017
      configuration: Debug

skip_commits:
  files:
    - doc/
    - LICENCE
    - README
    - README.md
    - CHANGELOG
    - COPYING
    - CODE_OF_CONDUCT.md

for:
########## UBUNTU SPECIFIC CONFIGURATION ##########
-
  matrix:
    only:
      - image: Ubuntu1804

  clone_folder: /home/appveyor/projects/jmbde-QT

  install:
    - sudo add-apt-repository --yes ppa:beineri/opt-qt-5.12.3-bionic
  # Linux
    - sudo apt-get update -qq
    - sudo apt-get -y install binutils
    - sudo apt-get -y install gcc
    - sudo apt-get -y install g++
    - sudo apt-get -y install libgl1-mesa-dev
    - sudo apt-get -y install zlib1g-dev
    # Qt 512 on Linux
    - sudo apt-get -y install qt512base 
    - sudo apt-get -y install qt512script 
    - sudo apt-get -y install qt512svg 
    - sudo apt-get -y install qt512imageformats 
    - sudo apt-get -y install qt512tools
    - source /opt/qt512/bin/qt512-env.sh    
  before_build:
      - mkdir -p build; cd build
      - cmake -DCMAKE_INSTALL_PREFIX=usr -DCMAKE_BUILD_TYPE=$CONFIGURATION .. 

  build_script:
    - cmake --build . 

  after_build:  
    - cpack .
    # - wget -c "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage" -O linuxdeployqt
    # - chmod a+x linuxdeployqt
    # - unset QTDIR; unset QT_PLUGIN_PATH; unset LD_LIBRARY_PATH
    # - "./linuxdeployqt ../src/app/Unix/io.github.jmuelbert.jmbde.desktop -bundle-non-qt-libs -extra-plugins=imageformats/libqsvg.so -exclude-libs=libpython3.54m.so.1.0 -verbose=2"
    # - ./linuxdeployqt --appimage-extract
    # - export PATH=$(readlink -f ./squashfs-root/usr/bin/):$PATH
    # - ./squashfs-root/usr/bin/appimagetool usr/
    # - find ./app -executable -type f -exec ldd {} \; | grep " => /usr" | cut -d " " -f 2-3 | sort | uniq
    # - mv jmbde-x86_64.AppImage jmbde-$JMBDE_VERSION-x86_64.AppImage

  test_script:
    - ctest -C $CONFIGURATION -VV

  artifacts:
    - path: "*.appimage"
    - path: "*.tar.gz"

########## END UBUNTU SPECIFIC CONFIGURATION ##########

########## WINDOWS SPECIFIC CONFIGURATION ##########
-
  matrix:
    only:
      - image: Visual Studio 2017
    fast_finish: false     # set this flag to true to immediately finish build once one of the jobs fails.

  init:
    - git config --global core.autocrlf input
# Uncomment the following line to show RDP info at beginning of job
#    - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

  clone_folder: c:\projects\jmbde-QT

  install:
    # Windows
    - cinst ninja
    - # cinst wget
    - nuget install secure-file -ExcludeVersion
    - call set ENVIRONMENT_NAME=%%ENVIRONMENT_NAME:PLATFORM=%platform%%%
    - call set ENVIRONMENT_NAME=%%ENVIRONMENT_NAME:CONFIGURATION=%configuration%%%
    - call set PLATFORM="x64"
    - call set QTDIR="C:\Qt\5.13.0\msvc2017_64"
    - call set /p RedistVersion=<"C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\Microsoft.VCRedistVersion.default.txt"
    - call set VCREDIST_CRT_DIR=C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Redist\MSVC\%RedistVersion%\x64\Microsoft.VC141.CRT
    - call set VCREDIST_CXXAMP_DIR=C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Redist\MSVC\%RedistVersion%\x64\Microsoft.VC141.CXXAMP
    - call set VCREDIST_OPENMP_DIR=C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Redist\MSVC\%RedistVersion%\x64\Microsoft.VC141.OpenMP
    - call set REDIST="C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Redist\MSVC\%RedistVersion%\vcredist_%PLATFORM%.exe"
    - call set PATH=%QTDIR%\bin;%INNO%;%PATH%
    # - call set CMAKE_GENERATOR="Visual Studio 15 2017 Win64"
    - call set CMAKE_GENERATOR="Ninja"
    - call set VCVARSALL="C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvarsall.bat"
    # - call set CMAKE_GENERATOR="MinGW Makefiles"
    # - call set QTDIR="C:\Qt\5.12.2\mingw73_64"
    - call set VCPKGDir="C:\Tools\vcpkg"
    - echo QTDIR=%QTDIR%
    
  before_build:
    - call %VCVARSALL% x64
    - call %QTDIR%\bin\qtenv2.bat
    - cd %APPVEYOR_BUILD_FOLDER%
    - mkdir build
    - cd build
    - ps: Write-Host "Generate the Project for $ENV:CMAKE_GENERATOR with $ENV:CONFIGURATION"
    - ps: cmake -G "$ENV:CMAKE_GENERATOR" -DCMAKE_BUILD_TYPE="$ENV:CONFIGURATION"  ..

  build_script:

    - ps: cmake --build . --target install

  after_build:
    - cd %APPVEYOR_BUILD_FOLDER%\build 
    - dir
    - dir "%APPVEYOR_BUILD_FOLDER%"
    - ps: Write-Host "$ENV:APPVEYOR_REPO_TAG_NAME"
    - cpack .
    - # windeployqt jmbde.exe libjmbde.dll
    - # cmd: cp %REDIST% .
    - # cp %APPVEYOR_BUILD_FOLDER%/dist/win/installer.iss .
    - # iscc /dVcpkgInstalledBinDir=%VCPKGDir%\\installed\\x64-windows\\bin\\  installer.iss
    - # move jmbde-*.exe %APPVEYOR_BUILD_FOLDER%

  test_script:
    - ctest -C "$ENV:CONFIGURATION" -VV

  artifacts:
    - path: "*.exe"
    - path: "*.zip"

  on_finish:
    # Uncomment the following line if you don't want the build VM to be destroyed
    # and be able to RDP on it until a special “lock” file on VM desktop is deleted
    # The RDP session is limited by overall build time (60 min).
    # - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

########## END WINDOWS SPECIFIC CONFIGURATION ##########

on_success:
  - echo "*** SUCCESS ***"

on_failure:
  - echo "*** FAILURE ***"

on_finish:
  - echo "*** DONE ***"
 

deploy:
  - provider: GitHub
    release: $(APPVEYOR_REPO_TAG_NAME)
    auth_token:
      secure: NuyAKQY3nsfYHO6P59pRQCWMFPBYGuShNyCwrBWLuqK7jQ/CmRNZeuWuVRUvy/xU
      artifact: /.*\.*Update app/
      draft: false
      on:
        appveyor_repo_tag: true
        push_release: true

  - provider: NuGet
    server:  https://www.nuget.org
    api_key: oy2k6l6mbqzqz4yxasnarz3dwqvesbpefewkyg4bi5uqz4
    secure: m49OJ7+Jdt9an3jPcTukHA==
    artifact: /.*\.nupkg/