clone_depth: 200
version: 1.0.{build}

cache:
  - C:\Users\appveyor\.m2
  - C:\ProgramData\chocolatey\bin -> appveyor.yml
  - C:\ProgramData\chocolatey\lib -> appveyor.yml

environment:
  my_secret:
    secure: NuyAKQY3nsfYHO6P59pRQCWMFPBYGuShNyCwrBWLuqK7jQ/CmRNZeuWuVRUvy/xU
  matrix:
    - GENERATOR: "Visual Studio 15 2017 Win64"
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      QTDIR: C:\Qt\5.12.2\msvc2017_64
      PLATFORM: x64
      INNO: C:\Program Files (x86)\Inno Setup 5
      REDIST: C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Redist\MSVC\%RedistVersion%\vcredist_%PLATFORM%.exe
      VCPKGDir: C:\Tools\vcpkg

    - GENERATOR: "Visual Studio 15 2017"
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      QTDIR: C:\Qt\5.12.2\msvc2017
      PLATFORM: x86
      INNO: C:\Program Files (x86)\Inno Setup 5
      REDIST: C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Redist\MSVC\%RedistVersion%\vcredist_%PLATFORM%.exe
      VCPKGDir: C:\Tools\vcpkg

    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
      MATRIX: "CC=gcc-7 && CXX=g++-7"


configuration: Release

init:
  - cmd: set JMBDE_HOME=%APPVEYOR_BUILD_FOLDER%
  - cmd: set /p RedistVersion=<"C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\Microsoft.VCRedistVersion.default.txt"
  - cmd: set VCREDIST_CRT_DIR=C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Redist\MSVC\%RedistVersion%\x64\Microsoft.VC141.CRT
  - cmd: set VCREDIST_CXXAMP_DIR=C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Redist\MSVC\%RedistVersion%\x64\Microsoft.VC141.CXXAMP
  - cmd: set VCREDIST_OPENMP_DIR=C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Redist\MSVC\%RedistVersion%\x64\Microsoft.VC141.OpenMP

  - cmd: set PATH=%PATH%;%QTDIR%\bin;%INNO%;
  - sh: sudo add-apt-repository --yes ppa:beineri/opt-qt-5.12.3-xenial

install:
  # Windows
  - cmd: choco install -y qbs --version 1.12.1
  - cmd: nuget install secure-file -ExcludeVersion
  # Linux
  - sh: sudo apt-get update -qq
  - sh: sudo apt-get -y install binutils
  - sh: sudo apt-get -y install gcc
  - sh: sudo apt-get -y install g++
  - sh: sudo apt-get -y install libgl1-mesa-dev
  - sh: sudo apt-get -y install zlib1g-dev
  - sh: eval "${MATRIX_EVAL}"
 # Qt 512
  - sh: sudo apt-get -y install qt512base 
  - sh: sudo apt-get -y install qt512script 
  - sh: sudo apt-get -y install qt512svg 
  - sh: sudo apt-get -y install qt512imageformats 
  - sh: sudo apt-get -y install qt512tools

  # Qbs 1.13
  - sh: source /opt/qt512/bin/qt512-env.sh
  - sh: source ./dist/linux/setup-qbs.sh

before_build:
  - cmd: FOR /F "tokens=*" %%i in ('git describe') do SET COMMITNOW=%%i
  - cmd: set VERSION_DATE=%DATE:~10,4%.%DATE:~4,2%.%DATE:~7,2%
  - cmd: if defined APPVEYOR_REPO_TAG_NAME (set JMBDE_RELEASE=true) else (set JMBDE_SNAPSHOT=true)
  - cmd: if defined JMBDE_RELEASE set JMBDE_VERSION=%APPVEYOR_REPO_TAG_NAME:~1%
  - cmd: if defined JMBDE_RELEASE echo Building JMBDE %JMBDE_VERSION%... (from %COMMITNOW%)
  - cmd: if defined JMBDE_SNAPSHOT set JMBDE_VERSION=%APPVEYOR_BUILD_VERSION%
  - cmd: if defined JMBDE_SNAPSHOT echo Building JMBDE snapshot %JMBDE_VERSION%... (from %COMMITNOW%)
  - sh: if [[ "$APPVEYOR_REPO_TAG" ]]; then export JMBDE_RELEASE=true ; fi
  - sh: if [[ "$APPVEYOR_REPO_TAG" ]]; then export JMBDE_VERSION=${APPVEYOR_REPO_TAG_NAME} ; fi
  - sh: if [[ "$APPVEYOR_REPO_TAG_NAME" == "" ]]; then export JMBDE_VERSION=$(date "+%Y.%m.%d") ; fi
  - sh: if [[ "$APPVEYOR_REPO_BRANCH" == "snapshot" ]]; then export JMBDE_SNAPSHOT=true ; fi
  
  - qbs --version
  - qbs setup-toolchains --detect
  - cmd: qbs setup-qt %QTDIR%\bin\qmake.exe qt
  - cmd: qbs config defaultProfile qt
  - sh: qbs config defaultProfile gcc
  - sh: qbs setup-qt /opt/qt512/bin/qmake qt512
  - sh: qbs config defaultProfile qt512

build_script:
  - cmd: qbs build --all-products config:release projects.JMBde.version:%JMBDE_VERSION%
  - sh: qbs install --install-root jmbde config:release qbs.installPrefix:/usr projects.JMBde.version:$JMBDE_VERSION

after_build:
  - cmd: cd Release/install-root 
  - cmd: windeployqt jmbde.exe jmbde.dll
  - cmd: cp '%REDIST%' .
  - cmd: cp ../../dist/win/installer.iss .
  - cmd: dir
  - cmd: %APPVEYOR_BUILD_FOLDER%
  - cmd: echo "%APPVEYOR_REPO_TAG_NAME:~1%"
  - cmd: iscc /dVcpkgInstalledBinDir=%VCPKGDir%\\installed\\x64-windows\\bin\\  installer.iss
  - cmd: move jmbde-*.exe %APPVEYOR_BUILD_FOLDER%
  # Linux
  - sh: cp LICENSE* *md jmbde/
  - sh: wget -c "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage" -O linuxdeployqt
  - sh: chmod a+x linuxdeployqt
  - sh: unset QTDIR; unset QT_PLUGIN_PATH; unset LD_LIBRARY_PATH
  - sh: "./linuxdeployqt ./jmbde/usr/share/applications/io.github.jmuelbert.jmbde.desktop -bundle-non-qt-libs -extra-plugins=imageformats/libqsvg.so -exclude-libs=libpython3.54m.so.1.0 -verbose=2"
  - sh: ./linuxdeployqt --appimage-extract
  - sh: export PATH=$(readlink -f ./squashfs-root/usr/bin/):$PATH
  - sh: ./squashfs-root/usr/bin/appimagetool jmbde/
  - sh: find ./jmbde -executable -type f -exec ldd {} \; | grep " => /usr" | cut -d " " -f 2-3 | sort | uniq
  - sh: mv jmbde-x86_64.AppImage jmbde-$JMBDE_VERSION-x86_64.AppImage

artifacts:
  - name: Installer
    path: "jmbde-*.*"
  - name: Archive
    path: "jmbde-*.7z"

deploy:
  - provider: GitHub
    release: $(APPVEYOR_REPO_TAG_NAME)
    auth_token:
      secure: NuyAKQY3nsfYHO6P59pRQCWMFPBYGuShNyCwrBWLuqK7jQ/CmRNZeuWuVRUvy/xU
    artifact: /.*\.*Update app/
    draft: true
    on:
      appveyor_repo_tag: true
      push_release: true
