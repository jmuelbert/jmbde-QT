---
# NOTE: customize `example-project-image` name below before deploying to a new
# project.

stages:
    # - build_docker_images
    # - push_docker_images
    - source
    - analysis
    # - build
    # - test
    - deploy

cmake-format Check:
    image: stabletec/build-core:fedora
    stage: analysis
    # tags:
    #   - docker-linux
    allow_failure: true
    script:
        - pip install cmakelang[YAML]
        - cmake-format --version
        - cmake-format -i $(find . -name "*.cmake")
        - cmake-format -i $(find . -name "CMakeLists.txt")
        - git diff --exit-code

clang-format Check:
    image: stabletec/build-core:fedora
    stage: analysis
    # tags:
    #   - docker-linux
    allow_failure: true
    script:
        - clang-format --version
        - clang-format -i $(find . -name "*.c")
        - clang-format -i $(find . -name "*.cpp")
        - clang-format -i $(find . -name "*.h")
        - clang-format -i $(find . -name "*.hpp")
        - git diff --exit-code

cppcheck:
    image: ubuntu:bionic
    stage: analysis
    before_script:
        - apt update
        - apt install -y --no-install-recommends cppcheck=1.82-1 python3-pygments python-pygments
        - cppcheck --version
    script:
        - mkdir cppcheck
        #- cppcheck . -I include/ --verbose --enable=all --inconclusive --language=c++ --error-exitcode=1
        - cppcheck . -I include/ --enable=all --inconclusive --xml-version=2 --force --library=windows,posix,gnu . 2> cppcheck/result.xml
        - cppcheck-htmlreport --source-encoding="iso8859-1" --title="my project name" --source-dir . --report-dir=cppcheck --file=cppcheck/result.xml
    artifacts:
        paths:
            - cppcheck/
        expire_in: 1 week

build-job:
  stage: build
  script:
    - echo "Hello, $GITLAB_USER_LOGIN!"

test-job1:
  stage: test
  script:
    - echo "This job tests something"

test-job2:
  stage: test
  script:
    - echo "This job tests something, but takes more time than test-job1."
    - echo "After the echo commands complete, it runs the sleep command for 20 seconds"
    - echo "which simulates a test that runs 20 seconds longer than test-job1"
    - sleep 20

deploy-prod:
  stage: deploy
  script:
    - echo "This job deploys something from the $CI_COMMIT_BRANCH branch."
    
pages:
    image: node:10
    stage: deploy
    only:
        - master
    cache:
        paths:
            - node_modules/
    before_script:
        - apt-get update && apt-get install -y calibre calibre-bin libxss1 libasound2
        - npm install gitbook-cli svgexport
        - npx gitbook fetch 3.2.3
        - npx gitbook install
    script:
        - npx gitbook build . public
        - 'sed -i "s/puppeteer.launch();/puppeteer.launch({args:
          [\"--no-sandbox\"]});/g" node_modules/svgexport/render.js'
        - npx gitbook pdf jmbde-QT.pdf
        - cp jmbde-QT.pdf public/jmbde-QT.pdf
    artifacts:
        paths:
            - public
        expire_in: 1 week
