test_code:
    image: rootproject/root:latest
    stage: test
    before_script:
        - DEBIAN_FRONTEND=noninteractive apt-get install -y keyboard-configuration
        - apt-get update
        - apt-get install -y keyboard-configuration
        - apt-get install -y build-essential
        - apt-get install -y software-properties-common
        - add-apt-repository ppa:git-core/ppa
        - apt-get update
        - apt-get install -y git
        - apt-get install -y make cmake ninja-build git pkgconf
        - apt-get install -y qtbase5-dev qttools5-dev qttools5-dev-tools libqt5help5 qml qtdeclarative5-dev-tools
        - apt-get install -y python3 python3-pip
        # We will install latest CMake, even though Ubuntu has a recent one
        - mkdir -p $HOME/.local
        - curl -s "https://cmake.org/files/v3.18/cmake-3.18.2-Linux-x86_64.tar.gz" | tar --strip-components=1 -xz -C $HOME/.local
        - export PATH=$HOME/.local/bin:$PATH
    script:
        - pip3 install conan
        - conan usr
        - conan create ./conan/ecm
        - cmake -GNinja -S examples -B build -DCMAKE_INSTALL_PREFIX=./build/AppDir/usr
        - cmake --build build -v
        - cmake --build build -t test

pages:
    image: node:10
    stage: deploy
    only:
        - master
    cache:
        paths:
            - node_modules/
    before_script:
        - apt-get update && apt-get install -y calibre calibre-bin libxss1 libasound2
        - npm install gitbook-cli svgexport
        - npx gitbook fetch 3.2.3
        - npx gitbook install
    script:
        - npx gitbook build . public
        - 'sed -i "s/puppeteer.launch();/puppeteer.launch({args: [\"--no-sandbox\"]});/g" node_modules/svgexport/render.js'
        - npx gitbook pdf . modern-cmake.pdf
        - cp modern-cmake.pdf public/modern-cmake.pdf
    artifacts:
        paths:
            - public
        expire_in: 1 week
