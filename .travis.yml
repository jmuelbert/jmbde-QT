language: cpp
sudo: required
dist: trusty
python: 3.6

env:
  global:
     # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
    #   via the "travis encrypt" command using the project repo's public key
    - secure: p3rN5l2i/w21LhRkGtn50lqhkrFXF9z0PTnip969B6bs5AWznG/zlNSTWckDAZpr5B0xuoysZg9/0on4pAUdludKoYQ7PKS1NFzjSH2yLcTuVy+HY6vkR21o7/rQxOJkH+ftOKnpe8Sv/0tRdGXYHVrAKh4XVTY0MQBrqXu2bQWMmgoi9P2CcvFzIukLqIk5LKDM5zin4sndPfipsT5eXPpQgAqD5XnGKdDqvX7WlSJOMcTVMDem3OIw/sM06u4kIsipQUdXD8yUhMMTflM39lsHcY/JYl+m6Fn6p0OLt1SY/euBvAKDmvMKMA6Wq7iLQprft7PL9dj2iNoerDKazL5hilY1lAgd1RWtTvn/YZXo/SaS1sVYmsUKJUFBRpU2SYCBnvuPiEYZ2WkeBCBzYziVJ2FoJrl4J/hXJnWd7O2MQPErREBXqv7nt55VMYrMj3s1tdJKvF8t6TOkPuR1YMDDlweYNXhCWGNqZressSDZX32evH8Mnt7VCWsgbUUFjK1k6f9ZmG//kssR320oPiF0bW28jJMVfqmAUcsCLIgF1+fsxUgn+ui0LtR6feV3QmUPWTmIvqpMuTvj/gLTQRZ5Bb0cD/zlc8BAgZJHGjWy9ZcXDrzDKBNtoP58JiVTTTRWrhrJFYx1BN0IJElv/pVGnf+VS3lJNHhFV9sDplI=

  addons:
    coverity_scan:
      project:
        name: jmuelbert/jmbde-QT
        description: A little BDE tool
      notification_email: juergen.muelbert@gmail.com
      build_command_prepend: qmake
      build_command: make
      branch_pattern: coverity_scan

matrix:
  include:
  - os: linux
    compiler: gcc
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-7
    env:
      - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
    before_install:
      - eval "${MATRIX_EVAL}"
      - sudo add-apt-repository --yes ppa:ubuntu-toolchain-r/test
      - sudo add-apt-repository --yes ppa:beineri/opt-qt595-trusty
#     - sudo add-apt-repository --yes ppa:beineri/opt-qt-5.10.1-trusty
      - sudo apt-get update -qq
    install:
      - sudo apt-get -y install qt59base qt59script qt59svg qt59imageformats qt59tools binutils zlib1g-dev
      - source /opt/qt59/bin/qt59-env.sh
      - source ./scripts/ci/linux/setup-qbs.sh
    script:
      - qbs --version
      - qbs setup-toolchains --detect
      - qbs setup-qt --detect
      - qbs config defaultProfile qt-5-9-5
      - qbs install --install-root jmbde/usr config:release projects.JMBde.version:$JMBDE_VERSION
      - cp LICENSE* *md jmbde/
    after_success:
      - wget -c "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage" -O linuxdeployqt 
      - chmod a+x linuxdeployqt 
      - unset QTDIR; unset QT_PLUGIN_PATH; unset LD_LIBRARY_PATH 
      - ./linuxdeployqt ./jmbde/usr/share/applications/io.github.jmuelbert.jmbde.desktop -bundle-non-qt-libs -extra-plugins=imageformats/libqsvg.so -exclude-libs=libpython3.4m.so.1.0 -verbose=2 
      - ./linuxdeployqt ./jmbde/usr/share/applications/io.github.jmuelbert.jmbde.desktop -exclude-libs=libpython3.4m.so.1.0 -appimage 
      - find ./jmbde -executable -type f -exec ldd {} \; | grep " => /usr" | cut -d " " -f 2-3 | sort | uniq 
      - mv jmbde-x86_64.AppImage jmbde-$JMBDE_VERSION-x86_64.AppImage
    deploy:
      - provider: releases
        skip_cleanup: true
        draft: true    
        tag_name: "$TRAVIS_TAG"    
        api_key:
          secure: pNq/95/zTpPX25pAF3ACjoIQAnvxp6xZQYCgKhKkXhuSMCSBMl7ZIrRw0BNuM1JSHe3bRV68pfF3tgTJDWtDjFj/JHAWDOAKWhc1DeEmBXVESoizaY2Hk4yrnxjFfk+XMOFgqO+iMExap4OW+kZWXP3tltjKUYzBROMU33rey6NBiYne+UNVlzC5vgy47mj7ResrS4YBl/s3nifuE9Bigp4yDYHh4/4UgXCLXuFup+PwYRQPfwZKKiac5Bk3nHXxW+8WK3b6anboyHb+eqdZMqtu5xjqOpjwroGPPuUQsRm7c4hT93yx3IIBoIHl29hdhkWJlCOQxdhnbV0Ch9E4gombkwfHGlTFAwD3SQZFkCLdtF+1hbMgp4jta09hLgSobOIHhpGjqw+CxB5epYCM7E3WC6iKSrE7yMiSEqg6V+cf3LV+B2MlSzr1HtwLe6B7542WhFoJiF0mJCCGt//Ztp2m5174s4ZwvsiXqYMgs5x5kyp1HS5NqqllxmL3dDdPlhscKWLr7zbwDG/hhDfUpfpjefmadwf6BramK66En7fe2iol/supO86alL6/WNpCtyFaTLve/DHtWfDt+XquivGZwzCAz+0XyopJc3E7Ebxi8C49dyvdrQRi+ej1s44Cm1l/qCtS90d3WyqSfp8moepbi4pwd08vw/TD5zi8+x4=
        file: j*.AppImage
        file_glob: true
        on:
          repo: jmuelbert/jmbde-QT
          tags: true   
  - os: linux
    compiler: gcc  
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-7
    env:
      - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
      - QMAKESPEC=linux-g++
      - MAKEFLAGS=-j2
    before_install:
      - eval "${MATRIX_EVAL}"
      - sudo add-apt-repository --yes ppa:ubuntu-toolchain-r/test
      - sudo add-apt-repository --yes ppa:beineri/opt-qt595-trusty
#     - sudo add-apt-repository --yes ppa:beineri/opt-qt-5.10.1-trusty
      - sudo apt-get update -qq

    install:
      - sudo apt-get -y install qt59base qt59script qt59svg qt59imageformats qt59tools binutils zlib1g-dev cppcheck
      - source /opt/qt59/bin/qt59-env.sh
      - qmake -version

    script:
      - qmake 
      - make
      - pushd tests/
      - qmake
      - make
      - for test in `find -executable -type f`; do pushd `dirname $test`; xvfb-run -a ./`basename $test`||exit 1; popd; done
      - popd

    after_success:
      - echo "All success."
    after_script:
      - cppcheck --enable=all -q -Isrc/libjmbde `git ls-files src/\*.cpp`
  - os: osx
    env:
        - INSTALLER_NAME="qt-opensource-mac-x64-5.11.2"
        - QT_CI_PACKAGES="qt.qt5.5112.clang_64"
    before_install:
      - brew update
      - brew install qbs
      - curl -L https://raw.githubusercontent.com/benlau/qtci/master/bin/extract-qt-installer --output extract-qt-installer
      - chmod +x extract-qt-installer
      - curl -L https://download.qt.io/official_releases/qt/5.11/5.11.2/${INSTALLER_NAME}.dmg --output ${INSTALLER_NAME}.dmg
      - hdiutil attach ${INSTALLER_NAME}.dmg
      - ./extract-qt-installer /Volumes/${INSTALLER_NAME}/${INSTALLER_NAME}.app/Contents/MacOS/${INSTALLER_NAME} $HOME/Qt
      - hdiutil detach /Volumes/${INSTALLER_NAME}
    script:
      - qbs --version
      - qbs setup-toolchains --detect
      - qbs setup-qt $HOME/Qt/5.11.2/clang_64/bin/qmake qt
      - qbs config profiles.qt.baseProfile xcode-macosx-x86_64
      - qbs config defaultProfile qt
      - qbs install --install-root install config:release project.JMBde.version:$JMBDE_VERSION
      # - $HOME/Qt/5.11.2/clang_64/bin/macdeployqt install/jmbde.app
      - pushd install
      - ruby ../dist/mac/fixup-install-names.rb
      - popd
    deploy:
      - provider: releases
        skip_cleanup: true
        draft: true        
        api_key:
          secure: pNq/95/zTpPX25pAF3ACjoIQAnvxp6xZQYCgKhKkXhuSMCSBMl7ZIrRw0BNuM1JSHe3bRV68pfF3tgTJDWtDjFj/JHAWDOAKWhc1DeEmBXVESoizaY2Hk4yrnxjFfk+XMOFgqO+iMExap4OW+kZWXP3tltjKUYzBROMU33rey6NBiYne+UNVlzC5vgy47mj7ResrS4YBl/s3nifuE9Bigp4yDYHh4/4UgXCLXuFup+PwYRQPfwZKKiac5Bk3nHXxW+8WK3b6anboyHb+eqdZMqtu5xjqOpjwroGPPuUQsRm7c4hT93yx3IIBoIHl29hdhkWJlCOQxdhnbV0Ch9E4gombkwfHGlTFAwD3SQZFkCLdtF+1hbMgp4jta09hLgSobOIHhpGjqw+CxB5epYCM7E3WC6iKSrE7yMiSEqg6V+cf3LV+B2MlSzr1HtwLe6B7542WhFoJiF0mJCCGt//Ztp2m5174s4ZwvsiXqYMgs5x5kyp1HS5NqqllxmL3dDdPlhscKWLr7zbwDG/hhDfUpfpjefmadwf6BramK66En7fe2iol/supO86alL6/WNpCtyFaTLve/DHtWfDt+XquivGZwzCAz+0XyopJc3E7Ebxi8C49dyvdrQRi+ej1s44Cm1l/qCtS90d3WyqSfp8moepbi4pwd08vw/TD5zi8+x4=
        file: j*.app
        file_glob: true
        on:
          tags: true

before_script:
  - if [[ "$TRAVIS_TAG" ]]; then export JMBDE_RELEASE=true ; fi
  - if [[ "$TRAVIS_TAG" ]]; then export JMBDE_VERSION=${TRAVIS_TAG:1} ; fi
  - if [[ "$TRAVIS_TAG" == "" ]]; then export JMBDE_VERSION=$(date "+%Y.%m.%d") ; fi
  - if [[ "$TRAVIS_BRANCH" == "snapshot" ]]; then export JMBDE_SNAPSHOT=true ; fi
