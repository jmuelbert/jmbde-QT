language: cpp
env:
  global:
      - QT_PPA: beineri/opt-qt-5.14.1-bionic
      - QT_VER: 514
      - QT_VERSION: 5.14.1

matrix:
  include:
    - name: "Linux (clang)"
      os: linux
      dist: bionic
      sudo: required
      compiler: clang
      services:
        - docker
      env:
        - CMAKE_BUILD_TYPE: Release



      before_install:
        - eval "${MATRIX_EVAL}"
        - sudo wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | sudo apt-key add -
        - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
        - sudo add-apt-repository -y ppa:${QT_PPA}
        - sudo apt-add-repository 'deb https://apt.kitware.com/ubuntu/ bionic main'
        - sudo apt-get -q update
        - sudo apt-get -y install cmake 
        - sudo apt-get -y install ninja-build 
        - sudo apt-get -y install libgl1-mesa-dev
        - echo "Install QT ${QT_VERSION} from ppa:${beineri/opt-qt-5.14.1-bionic}"
        - sudo apt-get -y install qt${QT_VER}base;
        - sudo apt-get -y install qt${QT_VER}script
        - sudo apt-get -y install  qt${QT_VER}svg
        - sudo apt-get -y install qt${QT_VER}imageformats
        - sudo apt-get -y install qt${QT_VER}translations
        - sudo apt-get -y install qt${QT_VER}tools
        - source /opt/qt${QT_VER}/bin/qt${QT_VER}-env.sh
        - version=3.16;
        - build=2;
        - mkdir buildcmake;
        - cd buildcmake;
        - wget https://cmake.org/files/v$version/cmake-$version.$build-Linux-x86_64.sh;
        - sudo mkdir /opt/cmake;
        - sudo sh cmake-$version.$build-Linux-x86_64.sh --skip-license --prefix=/opt/cmake;
        - sudo ln -s /opt/cmake/bin/cmake /usr/local/bin/cmake;
        - cd ..;
        - export PATH="/usr/local/bin:$PATH"
        - cmake --version
        - git clone git://anongit.kde.org/extra-cmake-modules
        - cd extra-cmake-modules
        - mkdir -p build; cd build
        - cmake ..
        - make
        - sudo make install
        - cd ../..

      script:
        - mkdir -p build
        - mkdir -p appbuild
        - mkdir -p appdir
        - cd build
        - cmake .. -DCMAKE_INSTALL_PREFIX:PATH=/usr -DBUILD_SHARED_LIBS=ON -DENABLE_TESTING=ON
        - make
        - ctest -V
        - cd ../appbuild
        - cmake -DCMAKE_INSTALL_PREFIX:PATH=../appdir/usr -Wno-dev ..
        - make install
        - cd ..
        - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/appdir/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH
        # - git rev-list master --count
        - wget -c "https://github.com/jimevins/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
        - chmod a+x linuxdeployqt*.AppImage
        - wget -c -nv "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage"
        - chmod a+x appimagetool-x86_64.AppImage
        # - export VERSION=$(printf "`master`-`git rev-list HEAD --count`-` git -C . rev-parse --short HEAD`")    #$(git rev-parse --short HEAD) # linuxdeployqt uses this for naming the file
        - ./linuxdeployqt*.AppImage appdir/usr/share/applications/*.desktop -bundle-non-qt-libs -extra-plugins=imageformats/libqsvg.so -exclude-libs=libpython3.54m.so.1.0 -verbose=2 -appimage
      
      after_success:
        # - unset QTDIR; unset QT_PLUGIN_PATH ; unset LD_LIBRARY_PATH
        # - ./linuxdeployqt*.AppImage --appimage-extract
        # - export PATH=$(readlink -f ./squashfs-root/usr/bin/):$PATH
        # - ./squashfs-root/usr/bin/appimagetool appdir/
      - find appdir -executable -type f -exec ldd {} \; | grep " => /usr" | cut -d " " -f 2-3 | sort | uniq
    
      deploy:
        provider: releases
        skip_cleanup: true
        draft: true
        tag_name: "$TRAVIS_TAG"
        api_key:
          secure: pNq/95/zTpPX25pAF3ACjoIQAnvxp6xZQYCgKhKkXhuSMCSBMl7ZIrRw0BNuM1JSHe3bRV68pfF3tgTJDWtDjFj/JHAWDOAKWhc1DeEmBXVESoizaY2Hk4yrnxjFfk+XMOFgqO+iMExap4OW+kZWXP3tltjKUYzBROMU33rey6NBiYne+UNVlzC5vgy47mj7ResrS4YBl/s3nifuE9Bigp4yDYHh4/4UgXCLXuFup+PwYRQPfwZKKiac5Bk3nHXxW+8WK3b6anboyHb+eqdZMqtu5xjqOpjwroGPPuUQsRm7c4hT93yx3IIBoIHl29hdhkWJlCOQxdhnbV0Ch9E4gombkwfHGlTFAwD3SQZFkCLdtF+1hbMgp4jta09hLgSobOIHhpGjqw+CxB5epYCM7E3WC6iKSrE7yMiSEqg6V+cf3LV+B2MlSzr1HtwLe6B7542WhFoJiF0mJCCGt//Ztp2m5174s4ZwvsiXqYMgs5x5kyp1HS5NqqllxmL3dDdPlhscKWLr7zbwDG/hhDfUpfpjefmadwf6BramK66En7fe2iol/supO86alL6/WNpCtyFaTLve/DHtWfDt+XquivGZwzCAz+0XyopJc3E7Ebxi8C49dyvdrQRi+ej1s44Cm1l/qCtS90d3WyqSfp8moepbi4pwd08vw/TD5zi8+x4=
        file_glob: true
        file: jmbde*.AppImage
        on:
          repo: jmuelbert/jmbde-QT
          tags: true

    - name: "macos (xcode11.2)"
      os: osx
      osx_image: xcode11.2
      addons:
        homebrew:
          packages:
            - cmake 
            - ninja 
            - ccache
          update: true

      env: 
        - CMAKE_BUILD_TYPE: Release

      before_install:
        - brew tap kde-mac/kde
        - brew install qt
        - brew link qt5 --force
        - export PATH="$(brew --prefix qt)/bin:$PATH"
        - brew install kf5-extra-cmake-modules
        - mkdir build; cd build

      script:
        - cmake -GNinja -DCMAKE_PREFIX_PATH="$(brew --prefix qt)" -DCMAKE_INSTALL_PREFIX=install -DBUILD_SHARED_LIBS=ON ..
        - sudo cmake --build . --config $CMAKE_BUILD_TYPE --target install
 
      after_success:
        - if [ -z "$VERSION" ]; then
          export VERSION=$(git rev-parse --short HEAD);
          fi
        - sudo macdeployqt install/jmbde.app -verbose=2
        - mkdir -p dmgdir/jmbde.app;
        - cp -r install/jmbde.app/* dmgdir/jmbde.app/
        - ln -s /Applications dmgdir/Applications;
        - hdiutil create -volname jmbde-$VERSION -srcfolder dmgdir -ov -format UDZO jmbde-$VERSION.dmg
        - ls

      deploy:
      provider: releases
      skip_cleanup: true
      draft: true
      tag_name: "$TRAVIS_TAG"
      api_key:
        secure: pNq/95/zTpPX25pAF3ACjoIQAnvxp6xZQYCgKhKkXhuSMCSBMl7ZIrRw0BNuM1JSHe3bRV68pfF3tgTJDWtDjFj/JHAWDOAKWhc1DeEmBXVESoizaY2Hk4yrnxjFfk+XMOFgqO+iMExap4OW+kZWXP3tltjKUYzBROMU33rey6NBiYne+UNVlzC5vgy47mj7ResrS4YBl/s3nifuE9Bigp4yDYHh4/4UgXCLXuFup+PwYRQPfwZKKiac5Bk3nHXxW+8WK3b6anboyHb+eqdZMqtu5xjqOpjwroGPPuUQsRm7c4hT93yx3IIBoIHl29hdhkWJlCOQxdhnbV0Ch9E4gombkwfHGlTFAwD3SQZFkCLdtF+1hbMgp4jta09hLgSobOIHhpGjqw+CxB5epYCM7E3WC6iKSrE7yMiSEqg6V+cf3LV+B2MlSzr1HtwLe6B7542WhFoJiF0mJCCGt//Ztp2m5174s4ZwvsiXqYMgs5x5kyp1HS5NqqllxmL3dDdPlhscKWLr7zbwDG/hhDfUpfpjefmadwf6BramK66En7fe2iol/supO86alL6/WNpCtyFaTLve/DHtWfDt+XquivGZwzCAz+0XyopJc3E7Ebxi8C49dyvdrQRi+ej1s44Cm1l/qCtS90d3WyqSfp8moepbi4pwd08vw/TD5zi8+x4=
      file_glob: true
      file: jmbde*.{dmg}
      on:
        repo: jmuelbert/jmbde-QT
        tags: true
